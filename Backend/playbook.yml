---
- name: Setup Demo PostgreSQL Database on Ubuntu
  hosts: postgres_vm
  become: true
  vars:
    postgres_version: 15
    postgres_service_name: postgresql
    demo_db_name: demo_db
    demo_db_user: demo_user
    demo_db_password: demo_pass
    postgres_port: 5432
    allow_ip_cidr: "0.0.0.0/0" # Change to your laptop IP/CIDR for security

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install required packages for adding repository
      apt:
        name:
          - wget
          - ca-certificates
          - gnupg
        state: present
        update_cache: yes

    - name: Add PostgreSQL APT repository key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: Add PostgreSQL APT repository
      apt_repository:
        repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        state: present
        filename: "pgdg.list"

    - name: Update APT cache after adding PostgreSQL repo
      apt:
        update_cache: yes

    - name: Install PostgreSQL and contrib package
      apt:
        name:
          - "postgresql-{{ postgres_version }}"
          - "postgresql-contrib-{{ postgres_version }}"
        state: present

    - name: Ensure PostgreSQL is started and enabled
      service:
        name: "{{ postgres_service_name }}"
        state: started
        enabled: yes

    # Use psql shell to avoid Ansible tmpfile bug

    # - name: Create demo database
    #   become: true
    #   become_user: postgres
    #   become_method: su
    #   shell: |
    #     psql -lqt | cut -d \| -f 1 | grep -qw {{ demo_db_name }} || \
    #     createdb -O {{ demo_db_user }} {{ demo_db_name }}
    #   args:
    #     executable: /bin/bash

    # - name: Configure listen_addresses in postgresql.conf
    #   lineinfile:
    #     path: "/etc/postgresql/{{ postgres_version }}/main/postgresql.conf"
    #     regexp: "^#?listen_addresses\\s*="
    #     line: "listen_addresses = '*'"
    #     notify: Restart PostgreSQL

    # - name: Allow remote connections in pg_hba.conf
    #   lineinfile:
    #     path: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
    #     insertafter: "^# IPv4 local connections:"
    #     line: "host    all             all             {{ allow_ip_cidr }}               md5"
    #     notify: Restart PostgreSQL

    - name: Ensure UFW is installed
      apt:
        name: ufw
        state: present

    - name: Allow PostgreSQL port in UFW
      ufw:
        rule: allow
        port: "{{ postgres_port }}"
        proto: tcp

    - name: Enable UFW (if not already enabled)
      ufw:
        state: enabled
      when: ansible_facts.ansible_local.ufw_enabled is not defined

    - name: Log database URL
      debug:
        msg: "postgresql://{{ demo_db_user }}:{{ demo_db_password }}@{{ inventory_hostname }}:{{ postgres_port }}/{{ demo_db_name }}"

  handlers:
    - name: Restart PostgreSQL
      service:
        name: "{{ postgres_service_name }}"
        state: restarted
